name: Build and Release Docker Image

on:
  push:
    branches:
      - automatic_test_pipeline
    tags:
      - '*'  # This will trigger when any tag is pushed (i.e., version tags)
  pull_request:
    branches:
      - automatic_test_pipeline

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    name: Run Pytest on PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest  # Or pytest tests/ if your tests are in a folder

  build:
    name: Build and Push Docker Image
    #if: github.event_name == 'push'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up GitVersion
        uses: GitTools/actions/gitversion-action@v0.9.7
        id: gitversion

      - name: Extract version from GitVersion
        run: |
          echo "DOCKER_TAG=${{ steps.gitversion.outputs.version }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}